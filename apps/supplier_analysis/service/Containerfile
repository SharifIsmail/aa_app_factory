FROM ubuntu:24.04@sha256:9cbed754112939e914291337b5e554b07ad7c392491dba6daf25eef1332a22e8 as build-image

# Install build dependencies and clean up in one layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    pipx \
    git \
    python3 \
    && rm -rf /var/lib/apt/lists/* \
    && pipx install uv

WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/root/.local/bin:$PATH"

# Copy dependency files and install dependencies
COPY pyproject.toml uv.lock .env.sample ./
RUN if [ -f .env ]; then cp .env .; fi

COPY ./src ./src
RUN uv sync --frozen --no-dev

# Final stage
FROM ubuntu:24.04@sha256:9cbed754112939e914291337b5e554b07ad7c392491dba6daf25eef1332a22e8 as runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-venv \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy virtual environment from build stage
COPY --from=build-image /app/.venv /app/.venv

# Fix permissions and Python symlinks in one layer
RUN rm -f /app/.venv/bin/python3 /app/.venv/bin/python && \
    ln -sf /usr/bin/python3 /app/.venv/bin/python && \
    ln -sf /usr/bin/python3 /app/.venv/bin/python3 && \
    chmod -R 755 /app/.venv && \
    chown -R 1000:1000 /app/.venv && \
    sed -i '1s|.*|#!/usr/bin/env python3|' /app/.venv/bin/uvicorn

ENV PATH="/app/.venv/bin:$PATH"

# Copy application files
COPY ./src ./src
COPY ./ui-artifacts ./ui-artifacts
COPY ./preprocessed_artifacts ./preprocessed_artifacts
COPY ../.env /app/.env

USER 1000:1000
EXPOSE 8080

CMD ["bash", "-c", "[ -f /app/.env ] && set -a && source /app/.env; uvicorn src.service.main:app --host 0.0.0.0 --port 8080"]