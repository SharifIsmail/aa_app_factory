"""Initial schema

Revision ID: 9e79a89578b1
Revises:
Create Date: 2025-07-11 12:11:06.915011

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "9e79a89578b1"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "law_monitoring_company_config",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("company_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "law_monitoring_discovery_runs",
        sa.Column("total_laws_found", sa.Integer(), nullable=True),
        sa.Column("successful_saves", sa.Integer(), nullable=True),
        sa.Column("skipped_existing", sa.Integer(), nullable=True),
        sa.Column("failed_saves", sa.Integer(), nullable=True),
        sa.Column("discovered_laws", sa.JSON(), nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("worker_type", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("errors", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "law_monitoring_discovery_state",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_run_at", sa.DateTime(), nullable=True),
        sa.Column("last_successful_run_at", sa.DateTime(), nullable=True),
        sa.Column("total_laws_discovered", sa.Integer(), nullable=False),
        sa.Column("total_discovery_runs", sa.Integer(), nullable=False),
        sa.Column("first_discovery_run", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "law_monitoring_execution_records",
        sa.Column("execution_uuid", sa.String(length=36), nullable=False),
        sa.Column("worker_uuid", sa.String(length=36), nullable=False),
        sa.Column("worker_type", sa.String(length=50), nullable=False),
        sa.Column("invoked_at", sa.DateTime(), nullable=False),
        sa.Column("work_started", sa.DateTime(), nullable=True),
        sa.Column("exit_reason", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("execution_uuid"),
    )
    op.create_table(
        "law_monitoring_laws",
        sa.Column("law_id", sa.String(length=100), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("discovered_at", sa.DateTime(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("RAW", "PROCESSING", "PROCESSED", "FAILED", name="lawstatus"),
            nullable=False,
        ),
        sa.Column("start_processing", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("expression_url", sa.Text(), nullable=False),
        sa.Column("pdf_url", sa.Text(), nullable=True),
        sa.Column("source_link", sa.Text(), nullable=True),
        sa.Column("full_report_link", sa.Text(), nullable=True),
        sa.Column("publication_date", sa.DateTime(), nullable=False),
        sa.Column("document_date", sa.DateTime(), nullable=True),
        sa.Column("effect_date", sa.DateTime(), nullable=True),
        sa.Column("end_validity_date", sa.DateTime(), nullable=True),
        sa.Column("notification_date", sa.DateTime(), nullable=True),
        sa.Column("law_text_fetched_at", sa.DateTime(), nullable=True),
        sa.Column("law_text", sa.Text(), nullable=True),
        sa.Column("document_type", sa.Text(), nullable=True),
        sa.Column(
            "document_type_label",
            sa.Enum(
                "DIRECTIVE",
                "REGULATION",
                "JUDICIAL_INFORMATION",
                "DECISION",
                "ANNOUNCEMENT",
                "RATE",
                "NOTICE",
                "CORRIGENDUM",
                "IMPLEMENTING_DECISION",
                "IMPLEMENTING_REGULATION",
                "SUMMARY",
                "OTHER",
                "UNKNOWN",
                name="documenttypelabel",
            ),
            nullable=False,
        ),
        sa.Column(
            "oj_series_label",
            sa.Enum("L_SERIES", "C_SERIES", "UNKNOWN", name="officialjournalseries"),
            nullable=False,
        ),
        sa.Column(
            "category",
            sa.Enum("OPEN", "RELEVANT", "NOT_RELEVANT", name="category"),
            nullable=False,
        ),
        sa.Column("eurovoc_labels", sa.JSON(), nullable=True),
        sa.Column("header_raw", sa.Text(), nullable=True),
        sa.Column("subject_matter", sa.JSON(), nullable=True),
        sa.Column("timeline", sa.JSON(), nullable=True),
        sa.Column("roles_penalties", sa.JSON(), nullable=True),
        sa.Column("roles_raw", sa.Text(), nullable=True),
        sa.Column("business_areas_affected", sa.Text(), nullable=True),
        sa.Column("team_relevancy_classification", sa.JSON(), nullable=False),
        sa.Column("html_report_path", sa.Text(), nullable=True),
        sa.Column("report_generated_at", sa.DateTime(), nullable=True),
        sa.Column("failure_count", sa.Integer(), nullable=False),
        sa.Column("last_failure_at", sa.DateTime(), nullable=True),
        sa.Column("last_failure_reason", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("law_id"),
    )
    op.create_table(
        "law_monitoring_missing_laws",
        sa.Column("file_id", sa.String(length=50), nullable=False),
        sa.Column("expression_url", sa.Text(), nullable=False),
        sa.Column("title", sa.Text(), nullable=False),
        sa.Column("publication_date", sa.DateTime(), nullable=False),
        sa.Column("detected_missing_at", sa.DateTime(), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("folder", sa.String(length=255), nullable=True),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("filename", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("file_id"),
    )
    op.create_table(
        "law_monitoring_reconciliation_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("last_reconciliation_date", sa.DateTime(), nullable=False),
        sa.Column("missing_acts_log", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "law_monitoring_summary_runs",
        sa.Column("processed", sa.Integer(), nullable=False),
        sa.Column("reason", sa.Text(), nullable=True),
        sa.Column("law_id", sa.String(length=100), nullable=True),
        sa.Column("processing_duration_seconds", sa.Float(), nullable=True),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("worker_type", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=20), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column("errors", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "law_monitoring_reconciliation_runs",
        sa.Column("run_id", sa.String(length=36), nullable=False),
        sa.Column("state_id", sa.Integer(), nullable=False),
        sa.Column("query_start_date", sa.DateTime(), nullable=False),
        sa.Column("query_end_date", sa.DateTime(), nullable=False),
        sa.Column("eur_lex_acts_found", sa.Integer(), nullable=False),
        sa.Column("missing_acts_count", sa.Integer(), nullable=False),
        sa.Column("status_counts", sa.JSON(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["state_id"],
            ["law_monitoring_reconciliation_state.id"],
        ),
        sa.PrimaryKeyConstraint("run_id"),
    )
    op.create_table(
        "law_monitoring_teams",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("department", sa.String(length=100), nullable=False),
        sa.Column("daily_processes", sa.JSON(), nullable=False),
        sa.Column("relevant_laws_or_topics", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["law_monitoring_company_config.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("law_monitoring_teams")
    op.drop_table("law_monitoring_reconciliation_runs")
    op.drop_table("law_monitoring_summary_runs")
    op.drop_table("law_monitoring_reconciliation_state")
    op.drop_table("law_monitoring_missing_laws")
    op.drop_table("law_monitoring_laws")
    op.drop_table("law_monitoring_execution_records")
    op.drop_table("law_monitoring_discovery_state")
    op.drop_table("law_monitoring_discovery_runs")
    op.drop_table("law_monitoring_company_config")

    # Drop ENUM types to ensure clean downgrade
    sa.Enum(name="category").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="officialjournalseries").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="documenttypelabel").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="lawstatus").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
